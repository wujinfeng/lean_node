// For more API doc, see https://github.com/coopernurse/node-pool#generic-pool

const createPhantomPool = require('phantom-pool');

const pool = createPhantomPool({
    max: 10, // default
    min: 2, // default
    // how long a resource can stay idle in pool before being removed
    idleTimeoutMillis: 30000, // default.
    // maximum number of times an individual resource can be reused before being destroyed; set to 0 to disable
    maxUses: 50, // default
    // function to validate an instance prior to use; see https://github.com/coopernurse/node-pool#createpool
    validator: () => Promise.resolve(true), // defaults to always resolving true
    // validate resource before borrowing; required for `maxUses and `validator`
    testOnBorrow: true, // default
    // For all opts, see opts at https://github.com/coopernurse/node-pool#createpool
    phantomArgs: [['--web-security=no'], {
        logLevel: 'warns',
    }], // arguments passed to phantomjs-node directly, default is `[]`. For all opts, see https://github.com/amir20/phantomjs-node#phantom-object-api
});

// Automatically acquires a phantom instance and releases it back to the
// pool when the function resolves or throws

async function useInstance(url){
    pool.use(async (instance) => {
        try{
            const page = await instance.createPage();
            const pageWidth = 600;
            const pageHeight = 400;
            const viewportSize = { width: pageWidth, height: pageHeight };
            const clipRect = { top: 0, left: 0, width: pageWidth, height: pageHeight };

            await page.property('viewviewportSize', viewportSize);
            await page.property('clipRect', clipRect);

            const status = await page.open(url, { operation: 'GET' });
            if (status !== 'success') {
                throw new Error('cannot open ' + url);
            }
            await page.render('stackove1.png', {format: 'png', quality: '50'});
        }catch (e) {
            throw new Error(e)
        }
    }).then((content) => {
        console.log(content)
    })
}

url = 'http://baidu.com'
useInstance(url);


